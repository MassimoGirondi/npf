%info
HTTP Requests with support for increasing rate

Generate HTTP requests towards "http://server/bin-XK" files using WRK

The HTTP server configuration is not part of this testie. Your main testie
should include something like FILE_PATH={file1,file2}

The address to make the request will use the adress from the node having the "dut" role. The port can be changed setting the HTTP_PORT variable.

See generic/http-load.wrk for examples such as fetching files with sizes from 1K to 1G
See experiments/test_wrk.testie for an experiment trying to find best configuration for 1K requests varying GEN_THREADS and GEN_CONCURRENT on a 16 cores CPU

This file is identical than wrk.testie, except it includes deps wrk2
%variables
GEN_CONCURRENT=128
GEN_THREADS=16
GEN_RATE=1000000
FILE_PATH=index.htm
HTTP_PORT=80
GEN_TIME=10
WRKNIC=0
WRK_HOST=EXPAND( ${dut:0:ip} )

%script deps=wrk2-tbarbette title=WRK2Client
echo "wrk -c $GEN_CONCURRENT -r -t $GEN_THREADS -d${GEN_TIME}s -R $GEN_RATE http://${WRK_HOST}:${HTTP_PORT}/${FILE_PATH}"

wrk -c $GEN_CONCURRENT -r -t $GEN_THREADS -d${GEN_TIME}s -R $GEN_RATE --latency http://${WRK_HOST}:${HTTP_PORT}/${FILE_PATH} | tee wrk_results
stat=$?
cat wrk_results | grep "Transfer/sec" | awk '{printf "RESULT-THROUGHPUT %s\n", $2}' | head -n 1
cat wrk_results | grep "Requests/sec" | awk '{printf "RESULT-REQUEST %s\n", $2}' | head -n 1
cat wrk_results | grep "Latency" | awk '{printf "RESULT-LATENCY %s\n", $2}' | head -n 1
cat wrk_results| grep "99.000%" | awk '{printf "RESULT-LAT99 %s\n", $2}' | head -n 1
cat wrk_results| awk '/Detailed Percentile/{flag=1;next}/Mean/{flag=0}flag' | tail -n +3 | head -n -1 | awk '{printf "%s-RESULT-CDFLAT %s\n", $1, $2}' | uniq

rm wrk_results
exit $stat
