%info
Test throughput through two NICs using DPDK

%config
require_tags={dpdk}

#Grapg title
title=DPDK L2 FastUDPGen + Fwd test
timeout=15

#Axis name
varnames={LENGTH:Length,result:Throughput,TXCPU:Transmit CPU,RXCPU:Receive CPU}
n_retry=3
acceptable=0.01
n_runs=1
var_serie=LENGTH

%variables
RXCPU={0,2}
fastregression:RXCPU=2
LENGTH=[64*1024]
fastregression:LENGTH={64,256,1024}

#Default
TXCPU=0

#Use 0 and 2 to avoid NUMA node change
full:TXCPU={0,2}

FLOWSIZE=32
BLOCK=false

full:FLOWSIZE=[1*256]
full:BLOCK={true,false}

INIT_TIME=[4-7]
FULL_TIME=1
TEST_TIME={1,2,3}

fastregression:INIT_TIME=5
fastregression:TEST_TIME=2

%script
click -n 4 -c 0xf -- CONFIG || click --dpdk -n 4 -c 0xf -- CONFIG

%file CONFIG
define ($mac0 aa:bb:cc:dd:ee:f0)
define ($mac1 aa:bb:cc:dd:ee:f1)
define ($ip0 10.19.0.1)
define ($ip1 10.19.0.2)

//fd0 :: FromDPDKDevice(0);
td0 :: ToDPDKDevice(0, BLOCKING $BLOCK);
fd1 :: FromDPDKDevice(1);
td1 :: ToDPDKDevice(1);

fu0 :: FastUDPFlows(RATE 0, LIMIT -1, LENGTH $LENGTH, SRCETH $mac0, DSTETH $mac1,
SRCIP $ip0, DSTIP $ip1, FLOWS 1, FLOWSIZE $FLOWSIZE, ACTIVE false)
    -> uq :: Unqueue(32)
    -> td0;
StaticThreadSched(fu0 0)
StaticThreadSched(uq $TXCPU)

fu1 :: FastUDPFlows(RATE 0, LIMIT 1, LENGTH 64, SRCETH $mac1, DSTETH $mac0, SRCIP $ip1, DSTIP $ip0, FLOWS 1, FLOWSIZE 1)
    -> Unqueue(1)
    -> td1;

fd1 -> ac :: AverageCounter
    -> Discard;
StaticThreadSched(fd1 $RXCPU)

finish :: Script(       print "Waiting for link initialization...",
                        wait $INIT_TIMEs,
                        print "Launching test !",
                        write fu0.active true,
                        wait $FULL_TIMEs,
                        write ac.reset,
                        wait $TEST_TIMEs,
                        print "RESULT $(add $(mul $(ac.byte_rate) 8) $(mul $(ac.count) 24))",
                        stop);
